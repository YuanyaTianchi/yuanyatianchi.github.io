<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mq on 鸢雅</title>
    <link>https://yuanyatianchi.github.io/tags/mq/</link>
    <description>Recent content in mq on 鸢雅</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    
	<atom:link href="https://yuanyatianchi.github.io/tags/mq/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Kafka</title>
      <link>https://yuanyatianchi.github.io/post/it.mq.kafka/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yuanyatianchi.github.io/post/it.mq.kafka/</guid>
      <description>Kafka http://kafka.apache.org/ client go 链接kafka使用第三方库 https://github.com/Shopify/sarama ，sarama v1.20之后的版本加入了zstd压缩算法，编译需要用到cgo，win上需要下载 http://mingw-w64.org/doku.php/download ，当然也可以使用v1.20之前的版本 got get -u github.com/Shopify/sarama /*kafka地址列表*</description>
    </item>
    
    <item>
      <title>MQ</title>
      <link>https://yuanyatianchi.github.io/post/it.mq.mq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yuanyatianchi.github.io/post/it.mq.mq/</guid>
      <description>消息队列 MQ解决的问题：解决了上下游工序之间的“通信”问题；解决了上下游生产速度不一致的问题，起到了“通信”过程中“缓存”的作用 哪些问题适合使用消息队列解决：异步处理、流量控制、服务解耦 秒杀系统与MQ</description>
    </item>
    
    <item>
      <title>RabbitMQ</title>
      <link>https://yuanyatianchi.github.io/post/it.mq.rabbitmq/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://yuanyatianchi.github.io/post/it.mq.rabbitmq/</guid>
      <description>RabbitMQ https://www.rabbitmq.com/ client go go get -u github.com/streadway/amqp package rabbitmq const URL = &amp;quot;amqp://guest:guest@127.0.0.1:5672/&amp;quot; //格式：amqp://账号:密码@地址:端口/虚拟主机 type RabbitMQ struct { url string //连接信息 conn *amqp.Connection //连接 channel *amqp.Channel //通道 queueName string //queue名 exchangeName string //exchange名 routingKey string //routing key } /*Rabb</description>
    </item>
    
  </channel>
</rss>